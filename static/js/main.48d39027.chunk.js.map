{"version":3,"sources":["images/certificate-template.jpg","App.js","index.js"],"names":["App","canvasRef","useRef","data","setData","useState","useEffect","initCanvas","callback","context","current","getContext","clearRect","width","height","image","Image","src","certificateTemplate","onload","drawImage","writeText","text","x","y","option","beginPath","font","weight","size","family","textBaseline","fillStyle","lines","split","forEach","line","i","fillText","stroke","onChangeHandler","e","target","name","value","className","style","margin","cellPadding","onChange","courseName","instructors","date","length","onClick","toDataURL","link","document","createElement","download","href","click","ref","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.48d39027.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/certificate-template.b27fd4bf.jpg\";","import { useEffect, useRef, useState } from 'react';\nimport certificateTemplate from './images/certificate-template.jpg';\nimport \"./css/styles.css\";\n\nexport default function App() {\n  const canvasRef = useRef();\n  const downloadRef = useRef();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    initCanvas();\n  }, []);\n\n  const initCanvas = (callback) => {\n    const context = canvasRef.current.getContext('2d');\n\n    // reset\n    context.clearRect(0, 0, canvasRef.current?.width, canvasRef.current?.height);\n\n    // image draw\n    const image = new Image();\n    image.src = certificateTemplate;\n    \n    image.onload = () => {\n      context.drawImage(image, 0, 0, canvasRef.current?.width, canvasRef.current?.height);\n      callback && callback();\n    };\n  };\n\n  const writeText = (text, x, y, option = {}) => {\n    const context = canvasRef.current.getContext('2d');\n\n    context.beginPath();\n    if (option.font) {\n      let font = '';\n      if (option.font.weight) \n        font = font + option.font.weight + ' ';\n\n      if (option.font.size)\n        font = font + option.font.size + 'px ';\n\n      if (option.font.family)\n        font = font + option.font.family;\n\n      context.font = font;\n    }\n    \n    if (option.textBaseline) context.textBaseline = option.textBaseline;\n    if(option.fillStyle) context.fillStyle = option.fillStyle;\n    const lines = text.split('\\n');\n    lines.forEach((line, i) => {\n      context.fillText(line, x, y + (i * (option.font.size + 15)));\n    });\n\n    context.stroke();\n  };\n\n  const onDownloadClick = () => {\n    const image = canvasRef.current.toDataURL(\"image/png\");\n\n    const link = document.createElement('a');\n    link.download = \"certificate.png\";\n    link.href = image;\n    link.click();\n  };\n\n  const onGenerateClick = () => {\n    initCanvas(() => {\n      if (data?.courseName) {\n        writeText(data?.courseName, 83, 312, {\n          font: {\n            size: 80,\n            weight: \"bold\",\n            family: \"Times New Roman\"\n          },\n          textBaseline: \"top\",\n          fillStyle: \"#1c1d1f\",\n        });\n      }\n  \n      if (data?.instructors) {\n        writeText(data?.instructors, 192, 512, {\n          font: {\n            size: 18,\n            weight: \"bold\",\n            family: \"Arial\"\n          },\n          textBaseline: \"top\",\n          fillStyle: \"#1c1d1f\",\n        });\n      }\n  \n      if (data?.name) {\n        writeText(data?.name, 83, 808, {\n          font: {\n            size: 54,\n            weight: \"bold\",\n            family: \"Arial\"\n          },\n          textBaseline: \"top\",\n          fillStyle: \"#1c1d1f\",\n        });\n      }\n  \n      if (data?.date) {\n        writeText(data?.date, 138, 886, {\n          font: {\n            size: 20,\n            weight: \"bold\",\n            family: \"Arial\"\n          },\n          textBaseline: \"top\",\n          fillStyle: \"#1c1d1f\",\n        });\n      }\n  \n      if (data?.length) {\n        writeText(data?.length + \" total hours\", 158, 918, {\n          font: {\n            size: 20,\n            weight: \"bold\",\n            family: \"Arial\"\n          },\n          textBaseline: \"top\",\n          fillStyle: \"#1c1d1f\",\n        });\n      }\n    });\n  };\n\n  const onChangeHandler = (e) => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <table style={{ margin: 'auto' }} cellPadding={5}>\n        <tr>\n          <td>\n            Name:\n          </td>\n          <td>\n            <input onChange={onChangeHandler} name=\"name\" value={data?.name || ''} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Course Name:\n          </td>\n          <td>\n            <textarea onChange={onChangeHandler} name=\"courseName\" value={data?.courseName || ''}></textarea>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Instructors:\n          </td>\n          <td>\n            <input onChange={onChangeHandler} name=\"instructors\" value={data?.instructors || ''} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Date:\n          </td>\n          <td>\n            <input onChange={onChangeHandler} name=\"date\" value={data?.date || ''} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Length:\n          </td>\n          <td>\n            <input onChange={onChangeHandler} name=\"length\" value={data?.length || ''} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            #\n          </td>\n          <td>\n            <button onClick={onGenerateClick}>Generate Certificate</button>{' '}\n            <button onClick={onDownloadClick}>Download</button>\n          </td>\n        </tr>\n      </table>\n      <canvas ref={canvasRef} height={1003} width={1349}/>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}